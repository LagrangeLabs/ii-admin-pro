{"version":3,"sources":["webpack:///./src/layouts/SecurityLayout.tsx"],"names":["SecurityLayout","state","isReady","setState","dispatch","props","type","children","loading","isLogin","queryString","stringify","redirect","window","location","href","pathname","React","Component","connect","user","currentUser","models"],"mappings":"sOAgBMA,E,6MACJC,MAA6B,CAC3BC,QAAS,I,iEAGS,CAClB,KAAKC,SAAS,CACZD,QAAS,KAFO,GAIVE,GAAa,KAAKC,MAAlBD,SACJA,GACFA,EAAS,CACPE,KAAM,wB,8BAKH,IACCJ,GAAY,KAAKD,MAAjBC,QADD,EAEuB,KAAKG,MAA3BE,EAFD,EAECA,SAAUC,EAFX,EAEWA,QAGZC,EAAU,GACVC,EAAcC,oBAAU,CAC5BC,SAAUC,OAAOC,SAASC,OAG5B,MAAK,CAACN,GAAWD,GAAY,CAACN,EACrB,kBAAC,IAAD,MAEL,CAACO,GAAWI,OAAOC,SAASE,WAAa,SACpC,kBAAC,IAAD,CAAU,GAAE,iBAAYN,KAE1BH,M,GAjCkBU,IAAMC,WAqCpBC,sBAAQ,eAAGC,GAAH,EAAGA,KAAMZ,EAAT,EAASA,QAAT,MAAsC,CAC3Da,YAAaD,EAAKC,YAClBb,QAASA,EAAQc,OAAOF,QACtBpB","file":"layouts__SecurityLayout.f5f8636b.async.js","sourcesContent":["import React from 'react'\nimport { PageLoading } from '@ant-design/pro-layout'\nimport { Redirect, connect, ConnectProps } from 'umi'\nimport { stringify } from 'querystring'\nimport { ConnectState } from '@/models/connect'\nimport { CurrentUser } from '@/models/user'\n\ninterface SecurityLayoutProps extends ConnectProps {\n  loading?: boolean\n  currentUser?: CurrentUser\n}\n\ninterface SecurityLayoutState {\n  isReady: boolean\n}\n\nclass SecurityLayout extends React.Component<SecurityLayoutProps, SecurityLayoutState> {\n  state: SecurityLayoutState = {\n    isReady: false,\n  }\n\n  componentDidMount() {\n    this.setState({\n      isReady: true,\n    })\n    const { dispatch } = this.props\n    if (dispatch) {\n      dispatch({\n        type: 'user/fetchCurrent',\n      })\n    }\n  }\n\n  render() {\n    const { isReady } = this.state\n    const { children, loading } = this.props\n    // You can replace it to your authentication rule (such as check token exists)\n    // 你可以把它替换成你自己的登录认证规则（比如判断 token 是否存在）\n    const isLogin = true // currentUser && currentUser.userid;\n    const queryString = stringify({\n      redirect: window.location.href,\n    })\n\n    if ((!isLogin && loading) || !isReady) {\n      return <PageLoading />\n    }\n    if (!isLogin && window.location.pathname !== '/login') {\n      return <Redirect to={`/login?${queryString}`} />\n    }\n    return children\n  }\n}\n\nexport default connect(({ user, loading }: ConnectState) => ({\n  currentUser: user.currentUser,\n  loading: loading.models.user,\n}))(SecurityLayout)\n"],"sourceRoot":""}